/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica.pkg4;

import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author sebas
 */
public class manualWindow extends javax.swing.JDialog {

    //Creación de variables
    public int number;
    public int pos;
    public static int vec[];
    public ArrayList lista = new ArrayList();
    MainWindow ventana = new MainWindow();

    /**
     * En este bloque se determina el estado inical de las etiquetas y los botones.
     * Además se establece que la ventana aparezca en el centro de la pantalla.
     */
    public manualWindow(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        jLabel1.setText("<html><p>A continuación, especifique el valor que desea agregar y la posición donde lo desea.</p></html>");
        vec = MainWindow.vec;
        ventana = (MainWindow) parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        position = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        newNumber = new javax.swing.JTextField();
        addToVector = new javax.swing.JButton();
        finish = new javax.swing.JButton();
        genRandom = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Posicion:");

        jLabel3.setText("Valor a agregar:");

        addToVector.setText("Agregar al vector");
        addToVector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToVectorActionPerformed(evt);
            }
        });

        finish.setText("Finalizar");
        finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishActionPerformed(evt);
            }
        });

        genRandom.setText("Generar valor aleatorio");
        genRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genRandomActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(26, 26, 26)
                                .addComponent(newNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(65, 65, 65)
                                .addComponent(position))
                            .addComponent(addToVector))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genRandom)
                            .addComponent(finish))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(newNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genRandom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(finish)
                    .addComponent(addToVector))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Al pulsar este botón se extraen los textos de los TextField y se realizan
     * las diferentes comprobaciones que puedan generar error (como números 
     * negativos o ingresos no numéricos).
     * Luego, se asigna el nuevo valor extraido a la posición señalada por el usuario.
     * @param evt Identifica cuando el botón es pulsado e inicia las acciones internas del botón
     */
    private void addToVectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToVectorActionPerformed
        String strNumber = newNumber.getText();
        String strPos = position.getText();
        if (strPos.equals("") || strNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, llene ambos campos antes de presionar el botón AGREGAR AL VECTOR.");
        } else {
            try {
                number = Integer.parseInt(strNumber);
                pos = Integer.parseInt(strPos);
                if (pos <= 0 || pos > vec.length) {
                    JOptionPane.showMessageDialog(null, "La posición ingresada está por fuera del tamaño del vector.");
                } else {
                    if (lista.contains(pos - 1)) {
                        if (JOptionPane.showConfirmDialog(null, "<html>Usted ya ingresó un número en esa posición.<br/>¿Desea reemplazar el valor actual por el nuevo valor?</html>", "Posición ya ingresada", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                            vec[pos - 1] = number;
                            newNumber.setText("");
                            position.setText("");
                            JOptionPane.showMessageDialog(null, "Valor agregado correctamente.");
                            ventana.showVector(vec, vec.length);
                        }
                    } else {
                        vec[pos - 1] = number;
                        newNumber.setText("");
                        position.setText("");
                        JOptionPane.showMessageDialog(null, "Valor agregado correctamente.");
                        ventana.showVector(vec, vec.length);
                        lista.add(pos - 1);
                    }
                }
            } catch (NumberFormatException exception) {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese únicamente valores numéricos.");
            }
        }
    }//GEN-LAST:event_addToVectorActionPerformed

    
    /**
     * Este botón cierra la ventana actual, volviendo a la ventana padre. 
     * Además, comprueba que todas las posiciones hayan sido llenadas e informa al usuario en caso contrario.
     * @param evt Identifica cuando el botón es pulsado e inicia las acciones internas del botón
     */
    private void finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishActionPerformed
        // TODO add your handling code here:
        if (lista.size() == vec.length) {
            this.dispose();
        } else {
            if (JOptionPane.showConfirmDialog(null, "<html>¿Está seguro/a que desea salir?<br/>Aún hay posiciones a las que no se les ha asignado un valor<br/>(Tenga en cuenta que si selecciona SI, se asignará cero (0) a las posiciones faltantes</html>", "Posiciones faltantes", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                this.dispose();
            }
        }
    }//GEN-LAST:event_finishActionPerformed

    
    /**
     * Este botón inserta un valor aleatorio a el TextField de "Valor a agregar"
     * @param evt Identifica cuando el botón es pulsado e inicia las acciones internas del botón
     */
    private void genRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genRandomActionPerformed
        // TODO add your handling code here:
        Random aleatorio = new Random();
        int n = aleatorio.nextInt(100);
        newNumber.setText(String.valueOf(n));
    }//GEN-LAST:event_genRandomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manualWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manualWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manualWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manualWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                manualWindow dialog = new manualWindow(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToVector;
    private javax.swing.JButton finish;
    private javax.swing.JButton genRandom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField newNumber;
    private javax.swing.JTextField position;
    // End of variables declaration//GEN-END:variables
}
